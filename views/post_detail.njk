{% extends 'base.njk' %}

{% block content %}
  <div>
    <h2 class="alert alert-primary">{{ post_detail.title }}</h2>

    {% if boardType == 'anonymous' %}
      <span class="badge rounded-pill bg-light">익명</span>
    {% else %}
      <span class="badge rounded-pill bg-light">{{ author }}</span>
    {% endif %}
    <span class="badge rounded-pill bg-light">{{ post_detail.createdAt}}</span>
    {% if post_detail.UserId == user.id %}
      <a class="badge rounded-pill bg-light" href="/boards/updatePage/{{post_detail.id}}">수정</a>
      <a class="badge rounded-pill bg-light" >
        <span id="delete-post" style="cursor: pointer;">삭제</span>
      </a>
    {% endif %}
    <br/>
    <hr/>
    {% if post_detail.img %}
      <img class="image" src="{{post_detail.img}}" alt="이미지"/>
    {% endif %}
    <br/>
    <br/>
    <p>
      {{ post_detail.content }}
    </p>
    <br/>
    <hr/>
  </div>

  <!-- 댓글 목록 공간 -->
  <section id="commentBox">
    <h5>
      <span id="comments-count">{{comments.length}}</span>개의 댓글
    </h5>
    <hr>
    {% for comment in comments %}
      <div id="comment-{{comment.id}}" class="comment">
        {% if boardType == 'anonymous' %}
          <span class="badge rounded-pill bg-light">익명</span>
        {% else %}
          <span class="badge rounded-pill bg-light">{{ comment.author }}</span>
        {% endif %}
        <span class="badge rounded-pill bg-light">{{ comment.createdAt }}</span>
        {% if comment.UserId === user.id %}
          <a class="badge rounded-pill bg-light" >
            <span class="delete-comment" data-postid="{{post_detail.id}}" data-commentid="{{comment.id}}" style="cursor: pointer;">삭제</span>
          </a>
        {% endif %}
        <p class="rounded-pill bg-light">{{ comment.comment }}</p>
        <hr>
      </div>
    {% endfor %}
  </section>

  <!-- 댓글 입력 공간 -->
  {% if user %}
    <div class="form-group">
      <textarea  name="comment" id="comment" class="form-control form-control-user" placeholder="댓글을 입력해주세요." rows="3"></textarea>
    </div>
    <div id="submit" class="btn btn-primary btn-icon-split btn-sm" value="댓글 입력">댓글 입력</div>
  {% else %}
    <textarea  name="comment" id="disabled-comment" class="form-control form-control-user" placeholder="댓글을 작성하려면 로그인 해주세요." rows="2" ></textarea>
  {% endif %}

{% endblock %}

{% block script %}
  <script>
    function deleteComment(e) {
      axios
        .delete(`/boards/comment/${e.target.dataset.postid}/${e.target.dataset.commentid}`)
        .then((res) => {
          document
            .querySelector(`#comment-${res.data.comment_id}`)
            .remove();
          updateCountComments();
        })
        .catch(console.error);
    }

    function updateCountComments() {
      const span_count_comment = document.querySelector('#comments-count');
      const count = document.querySelectorAll('.comment');
      span_count_comment.textContent = count.length || 0;
    }

    if (document.querySelector('#submit')) {

      document
        .querySelector('#submit')
        .addEventListener('click', function (e) {
          axios
            .post('/boards/comment/{{post_detail.id}}', {
              comment: document
                .querySelector('#comment')
                .value
            })
            .then((res) => {
              const div = document.createElement('div');
              div.setAttribute('id', `comment-${res.data.comment.id}`);
              div.setAttribute('class', 'comment');

              const author_span = document.createElement('span');
              author_span
                .classList
                .add('badge', 'rounded-pill', 'bg-light');
              author_span.textContent = `{{boardType}}` === 'anonymous'
                ? '익명'
                : res.data.comment_author;
              div.appendChild(author_span);

              const date_span = document.createElement('span');
              date_span
                .classList
                .add('badge', 'rounded-pill', 'bg-light');
              date_span.textContent = res.data.comment_createdAt;
              div.appendChild(date_span);

              const a = document.createElement('a');
              a
                .classList
                .add('badge', 'rounded-pill', 'bg-light');
              const delete_span = document.createElement('span');
              delete_span
                .classList
                .add('delete-comment');
              delete_span.setAttribute('data-postid', {{post_detail.id}});
              delete_span.setAttribute('data-commentid', res.data.comment.id);
              delete_span.setAttribute('style', "cursor: pointer;");
              delete_span.textContent = '삭제';
              delete_span.addEventListener('click', deleteComment);

              a.appendChild(delete_span);
              div.appendChild(a);

              const p = document.createElement('p');
              p.textContent = res.data.comment.comment;
              p
                .classList
                .add('rounded-pill', 'bg-light');
              div.appendChild(p);
              div.appendChild(document.createElement('hr'));

              const commentSection = document.querySelector('#commentBox');
              commentSection.appendChild(div);

              updateCountComments();
            })
            .catch(console.error);

          document
            .querySelector('#comment')
            .value = '';
        });
    }

    if (document.querySelector('#disabled-comment')) {
      document
        .querySelector('#disabled-comment')
        .addEventListener('click', function (e) {
          alert('로그인을 하신 후 이용해 주시기 바랍니다.');
          window.location = `/auth/login?next_url=${window.location.href}`;
        })
    }

    if (document.querySelector('#delete-post')) {
      document
        .querySelector('#delete-post')
        .addEventListener('click', function (e) {
          axios
            .delete('/boards/{{post_detail.id}}')
            .then(window.location = `/boards/{{boardType}}`)
            .catch(console.error)
          });
    }

    if (document.querySelectorAll('.delete-comment')) {
      document
        .querySelectorAll('.delete-comment')
        .forEach((element) => {
          element.addEventListener('click', deleteComment);
        });
    }
  </script>
{% endblock %}